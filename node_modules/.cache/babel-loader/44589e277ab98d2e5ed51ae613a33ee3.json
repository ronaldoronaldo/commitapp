{"ast":null,"code":"import _classCallCheck from \"/home/rafael/Desktop/commitapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rafael/Desktop/commitapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rafael/Desktop/commitapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rafael/Desktop/commitapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rafael/Desktop/commitapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rafael/Desktop/commitapp/src/GithubHeatmap/GithubTiles.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport GithubTile from './GithubTile';\nimport './GithubHeatmap.scss';\n\nvar GithubTiles =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(GithubTiles, _React$PureComponent);\n\n  function GithubTiles() {\n    _classCallCheck(this, GithubTiles);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GithubTiles).apply(this, arguments));\n  }\n\n  _createClass(GithubTiles, [{\n    key: \"mountTiles\",\n    value: function mountTiles(filteredData) {\n      var _this$props = this.props,\n          startDate = _this$props.startDate,\n          endDate = _this$props.endDate;\n\n      var relation = this._findFrequencyRelation(filteredData);\n\n      var currentDate = new Date(startDate);\n      var tiles = [];\n      var column = [];\n      var counter = 0;\n      var week = 0;\n\n      while (currentDate <= endDate) {\n        var copiedDate = new Date(currentDate);\n\n        var count = this._findCount(filteredData, currentDate);\n\n        var tile = React.createElement(GithubTile, {\n          key: \"tile-\".concat(currentDate.toISOString()),\n          tooltip: true,\n          date: copiedDate,\n          contributions: count,\n          colorTone: this._findColor(relation, count),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n        column.push(tile);\n        counter++;\n\n        if (counter === 7) {\n          tiles.push(React.createElement(\"div\", {\n            key: \"week-\".concat(week),\n            className: \"github-tiles-column\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, column));\n          week++;\n          column = [];\n          counter = 0;\n        }\n\n        currentDate.setDate(currentDate.getDate() + 1);\n        currentDate.setHours(0, 0, 0, 0);\n      }\n\n      if (counter > 0) {\n        tiles.push(React.createElement(\"div\", {\n          key: \"week-\".concat(week),\n          className: \"github-tiles-column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, column));\n      }\n\n      return tiles;\n    }\n  }, {\n    key: \"_findFrequencyRelation\",\n    value: function _findFrequencyRelation(filteredData) {\n      var contributions = _.map(filteredData, 'count');\n\n      var max = _.max(contributions);\n\n      if (max <= 5) {\n        return {\n          high: 4,\n          medium: 3,\n          low: 2,\n          veryLow: 1\n        };\n      }\n\n      return {\n        high: max,\n        medium: max / 4 * 3,\n        low: max / 4 * 2,\n        veryLow: max / 4\n      };\n    }\n  }, {\n    key: \"_findCount\",\n    value: function _findCount(filteredData, currentDate) {\n      var month = currentDate.getMonth() + 1;\n      month = month < 10 ? \"0\".concat(month) : \"\".concat(month);\n      var day = currentDate.getDate();\n      day = day < 10 ? \"0\".concat(day) : \"\".concat(day);\n      var currentFormattedDate = \"\".concat(currentDate.getFullYear(), \"-\").concat(month, \"-\").concat(day);\n\n      var count = _.find(filteredData, {\n        date: currentFormattedDate\n      });\n\n      return count ? count.count : 0;\n    }\n  }, {\n    key: \"_findColor\",\n    value: function _findColor(relation, count) {\n      if (count === relation.high) {\n        return 'dark';\n      }\n\n      if (count > relation.medium) {\n        return 'normal';\n      }\n\n      if (count > relation.low) {\n        return 'light';\n      }\n\n      if (count === 0) {\n        return 'nothing';\n      }\n\n      return 'weak';\n    }\n  }, {\n    key: \"filterData\",\n    value: function filterData() {\n      var _this$props2 = this.props,\n          startDate = _this$props2.startDate,\n          endDate = _this$props2.endDate,\n          data = _this$props2.data;\n      return _.filter(data, function (row) {\n        var rowDate = new Date(row.date);\n        return rowDate >= startDate && rowDate <= endDate;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var filteredData = this.filterData();\n      return React.createElement(\"div\", {\n        className: \"github-tiles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"github-tiles-days\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"github-tiles-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"github-tiles-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Mon\"), React.createElement(\"div\", {\n        className: \"github-tiles-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"github-tiles-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Wed\"), React.createElement(\"div\", {\n        className: \"github-tiles-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"github-tiles-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Fri\"), React.createElement(\"div\", {\n        className: \"github-tiles-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), this.mountTiles(filteredData));\n    }\n  }]);\n\n  return GithubTiles;\n}(React.PureComponent);\n\nGithubTiles.propTypes = {\n  startDate: PropTypes.instanceOf(Date).isRequired,\n  endDate: PropTypes.instanceOf(Date).isRequired,\n  data: PropTypes.array.isRequired\n};\nexport { GithubTiles as default };","map":{"version":3,"sources":["/home/rafael/Desktop/commitapp/src/GithubHeatmap/GithubTiles.jsx"],"names":["React","PropTypes","_","GithubTile","GithubTiles","filteredData","props","startDate","endDate","relation","_findFrequencyRelation","currentDate","Date","tiles","column","counter","week","copiedDate","count","_findCount","tile","toISOString","_findColor","push","setDate","getDate","setHours","contributions","map","max","high","medium","low","veryLow","month","getMonth","day","currentFormattedDate","getFullYear","find","date","data","filter","row","rowDate","filterData","mountTiles","PureComponent","propTypes","instanceOf","isRequired","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport GithubTile from './GithubTile';\nimport './GithubHeatmap.scss'\n\nexport default class GithubTiles extends React.PureComponent {\n    static propTypes = {\n        startDate: PropTypes.instanceOf(Date).isRequired,\n        endDate: PropTypes.instanceOf(Date).isRequired,\n        data: PropTypes.array.isRequired\n    };\n\n    mountTiles(filteredData){\n        const { startDate, endDate } = this.props;\n\n        const relation = this._findFrequencyRelation(filteredData);\n\n        let currentDate = new Date(startDate);\n        let tiles = [];\n        let column = [];\n        let counter = 0;\n        let week = 0;\n        while (currentDate <= endDate){\n            const copiedDate = new Date(currentDate);\n            const count = this._findCount(filteredData, currentDate);\n            let tile = <GithubTile key={`tile-${currentDate.toISOString()}`} tooltip date={copiedDate} contributions={count} colorTone={this._findColor(relation, count)}/>\n            column.push(tile);\n            counter++;\n            if (counter === 7){\n                tiles.push(<div key={`week-${week}`} className='github-tiles-column'>{column}</div>)\n                week++;\n                column = [];\n                counter = 0;\n            }\n            currentDate.setDate(currentDate.getDate() + 1 );\n            currentDate.setHours(0, 0, 0, 0);\n        }\n        if (counter > 0) {\n            tiles.push(<div key={`week-${week}`} className='github-tiles-column'>{column}</div>)\n        }\n        return tiles;\n    }\n\n    _findFrequencyRelation(filteredData){\n        const contributions = _.map(filteredData, 'count');\n        const max = _.max(contributions);\n        if (max <= 5){\n            return {high: 4, medium: 3, low: 2, veryLow: 1};\n        }\n        return { high: max, medium: max / 4 * 3, low: max / 4 * 2, veryLow: max / 4 };\n    }\n\n    _findCount(filteredData, currentDate){\n        let month = currentDate.getMonth() + 1;\n        month = (month < 10) ? `0${month}`: `${month}`;\n\n        let day = currentDate.getDate();\n        day = (day < 10) ? `0${day}` : `${day}`;\n\n        const currentFormattedDate = `${currentDate.getFullYear()}-${month}-${day}`;\n        const count = _.find(filteredData, {date: currentFormattedDate});\n        return (count) ? count.count : 0;\n    }\n\n    _findColor(relation, count){\n        if (count === relation.high){\n            return 'dark';\n        }\n        if (count > relation.medium){\n            return 'normal';\n        }\n        if (count > relation.low) {\n            return 'light';\n        }\n        if (count === 0 ){\n            return 'nothing';\n        }\n        return 'weak'\n    }\n\n    filterData(){\n        const { startDate, endDate, data } = this.props;\n        return _.filter(data, (row) => {\n            const rowDate = new Date(row.date);\n            return rowDate >= startDate && rowDate <= endDate;\n        });\n    }\n\n    render(){\n        const filteredData = this.filterData();\n        return (\n            <div className='github-tiles'>\n                \n                <div className='github-tiles-days'>\n                    <div className='github-tiles-day'/>\n                    <div className='github-tiles-day'>Mon</div>\n                    <div className='github-tiles-day'/>\n                    <div className='github-tiles-day'>Wed</div>\n                    <div className='github-tiles-day'/>\n                    <div className='github-tiles-day'>Fri</div>\n                    <div className='github-tiles-day'/>\n                </div>\n                {this.mountTiles(filteredData)}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}